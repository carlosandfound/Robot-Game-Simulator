/**
 * @file motion_handler_player.h
 *
 * @copyright 2017 Carlos Alvarenga, All rights reserved.
 */

#ifndef PROJECT_ITERATION2_SRC_MOTION_HANDLER_PLAYER_H_
#define PROJECT_ITERATION2_SRC_MOTION_HANDLER_PLAYER_H_

/*******************************************************************************
 * Includes
 ******************************************************************************/
#include "src/robot_params.h"
#include "src/motion_handler.h"

/*******************************************************************************
 * Namespaces
 ******************************************************************************/
NAMESPACE_BEGIN(csci3081);

/*******************************************************************************
 * Classes
 ******************************************************************************/
/**
 * @brief Class managing the motion behavior of the Player in wake of a user
 * input or collision event.
 */
class MotionHandlerPlayer : public MotionHandler {
 public:
  /**
   * @brief Default constructor.
   */
  MotionHandlerPlayer();

  /**
   * @brief Handling commands from the GraphicsArenaViewer (generated by user
   * keypress).
   *
   * Up arrow increases speed, up to a defined limit.
   * Down arrow decreases speed, down to 0 (no negative speeds).
   * Right arrow changes the heading angle clockwise.
   * Left arrow changes the heading angle counter-clockwise.
   *
   * Maximum speed, speed delta, and angle delta are defined in main.cc.
   *
   * @param cmd The command to be processed.
   */
  void AcceptCommand(enum event_commands cmd);

  /**
  * @brief Update the speed and the heading angle according to sensor touch's
  * readings.
  *
  * @param st A SensorTouch to be read.
  */
  void UpdateVelocity(SensorTouch st) override;

 private:
  double heading_angle_;
  double speed_;
  double max_speed_;
  double max_angle_;
  double speed_delta_;
  double angle_delta_;
};

NAMESPACE_END(csci3081);

#endif   // PROJECT_ITERATION2_SRC_MOTION_HANDLER_PLAYER_H_
